questions = "./input/survey.csv",
choices = "./input/choices.csv",
choices.label.column.to.use = "label::English (en)")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = questionnaire)
result %>% map_to_labeled(questionnaire) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/summary_statistics.csv")
###########
questions <- read.csv("./input/survey.csv")
choices <- read.csv("./input/choices.csv")
questionnaire <- load_questionnaire(data = "./input/data.csv",
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
View(choices)
rm(list = ls())
questions <- read.csv("./input/survey.csv")
choices <- read.csv("./input/choices.csv")
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
questionnaire <- load_questionnaire(data = "./input/data.csv",
questions = "./input/survey.csv",
choices = "./input/choices.csv",
choices.label.column.to.use = "label")
questionnaire <- load_questionnaire(data = "./input/data.csv",
questions = "./input/survey.csv",
choices = "./input/choices.csv",
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
koboquest::question_type(variable.name = "food_name",data = data,from.questionnaire = questionnaire)
q <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
q$question_type("food_source")
q$question_is_select_multiple("food_source")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
result %>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/summary_statistics.csv")
rm(list = ls())
questions <- read.csv("./input/survey.csv")
choices <- read.csv("./input/choices.csv")
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
q <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
q$question_type("food_source")
q$question_is_select_multiple("food_source")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data
)
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
debugonce(map_to_result)
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
parameters <- list(dependent.var = dependent.var, independent.var = independent.var,
cluster.variable.name = cluster.variable.name, weighted = is.function(weighting),
case = case)
is_valid_case_string(case)
design <- map_to_design(data = data, weighting_function = weighting,
cluster_variable_name = cluster.variable.name)
hypothesis.test.result <- map_to_hypothesis_test(design = design,
dependent.var = dependent.var, independent.var = independent.var,
case = case, questionnaire = questionnaire)
summary.result <- map_to_summary_statistic(design = design,
dependent.var = dependent.var, independent.var = independent.var,
case = case, questionnaire = questionnaire)
View(summary.result)
return(list(parameters = parameters, summary.statistic = summary.result,
hypothesis.test = hypothesis.test.result, message = "success (or unidentified issue)"))
View(summary.result)
result %>% map_to_labeled(q) -> result_labeled
summary.result
summary.result%>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/summary_statistics.csv")
View(result_labeled)
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
View(result)
result$summary.statistic
result %>% map_to_labeled(q) -> result_labeled
result_labeled$summary.statistic
map_to_file(result_labeled$summary.statistic,"./output/summary_statistics.csv")
result %>% map_to_labeled(q) -> result_labeled
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
debugonce(map_to_labeled)
result %>% map_to_labeled(q) -> result_labeled
is.null(result$summary.statistic
is.null(result$summary.statistic)
result$summary.statistic <- labels_summary_statistic(result$summary.statistic,
questionnaire = questionnaire, label.dependent.var.value = T,
label.independent.var.value = T)
View(result)
debugonce(labels_summary_statistic)
result$summary.statistic <- labels_summary_statistic(result$summary.statistic,
questionnaire = questionnaire, label.dependent.var.value = T,
label.independent.var.value = T)
is.null(summary.statistic)
length(unique(summary.statistic[, "dependent.var"])
length(unique(summary.statistic[, "dependent.var"])) >
1
length(unique(summary.statistic[, "independent.var"])) >
1
linebreak <- function(text, n = 40) {
wtext <- sapply(text, function(x) {
paste(strwrap(x, width = n), collapse = "\n")
})
return(unname(wtext))
}
label.dependent.var.value
summary.statistic[, "dependent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"dependent.var.value"], summary.statistic[, "dependent.var"][1])
summary.statistic
dependent.linebreak
label.independent.var.value
summary.statistic[, "independent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
independent.linebreak
summary.statistic[, "independent.var.value"] %<>%
linebreak
label.dependent.var
summary.statistic[, "dependent.var"] <- questionnaire$question_get_question_label(summary.statistic[,
"dependent.var"])
label.independent.var
summary.statistic[, "independent.var"] <- questionnaire$question_get_question_label(summary.statistic[,
"independent.var"])
summary.statistic
rm(list = ls())
rm(list = ls())
questions <- read.csv("./input/survey.csv")
choices <- read.csv("./input/choices.csv")
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
q <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
q$question_type("food_source")
q$question_is_select_multiple("food_source")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
result$summary.statistic
result <- map_to_labeled(result = result,
questionnaire = q)
result$summary.statistic
result %>% map_to_labeled(q) -> result_labeled
result_labeled$summary.statistic
debugonce(map_to_labeled)
result %>% map_to_labeled(q) -> result_labeled
debugonce(labels_summary_statistic)
result$summary.statistic <- labels_summary_statistic(result$summary.statistic,
questionnaire = questionnaire, label.dependent.var.value = T,
label.independent.var.value = T)
summary.statistic
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
result$summary.statistic
result %>% map_to_labeled(q) -> result_labeled
result_labeled$summary.statistic
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
rm(list = ls())
rm(list = ls())
questions <- read.csv("./input/survey.csv")
choices <- read.csv("./input/choices.csv")
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
q <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
kobostandards::check_input(data = data, questions = questions, choices = choices ,samplingframe = sampling_frame,
analysisplan = analysisplan) %>% write.csv("check_input.csv")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
kobostandards::check_input(data = data, questions = questions, choices = choices ,samplingframe = sampling_frame,
analysisplan = analysisplan) %>% write.csv("check_input.csv")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
result %>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
result<-map_to_result(data = data,
dependent.var = "sex_hoh",
case = case,
weighting = weights,
questionnaire = q)
result %>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "numerical")
result<-map_to_result(data = data,
dependent.var = "age_hoh",
case = case,
weighting = weights,
questionnaire = q)
result %>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "sex_hoh",
case = case,
weighting = weights,
questionnaire = q)
result %>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "numerical")
result<-map_to_result(data = data,
dependent.var = "age_hoh",
case = case,
weighting = weights,
questionnaire = q)
q$question_type("age_hoh")
debugonce(map_to_result)
result<-map_to_result(data = data,
dependent.var = "age_hoh",
case = case,
weighting = weights,
questionnaire = q)
options(survey.lonely.psu = "remove")
parameters <- list(dependent.var = dependent.var, independent.var = independent.var,
cluster.variable.name = cluster.variable.name, weighted = is.function(weighting),
case = case)
View(parameters)
design <- map_to_design(data = data, weighting_function = weighting,
cluster_variable_name = cluster.variable.name)
hypothesis.test.result <- map_to_hypothesis_test(design = design,
dependent.var = dependent.var, independent.var = independent.var,
case = case, questionnaire = questionnaire)
View(design)
View(hypothesis.test.result)
summary.result <- map_to_summary_statistic(design = design,
dependent.var = dependent.var, independent.var = independent.var,
case = case, questionnaire = questionnaire)
View(summary.result)
debugonce(map_to_labeled)
result %>% map_to_labeled(q) -> result_labeled
debugonce(labels_summary_statistic)
result$summary.statistic <- labels_summary_statistic(result$summary.statistic,
questionnaire = questionnaire, label.dependent.var.value = T,
label.independent.var.value = T)
is.null(summary.statistic)
length(unique(summary.statistic[, "dependent.var"])) >
1
length(unique(summary.statistic[, "independent.var"])) >
1
linebreak <- function(text, n = 40) {
wtext <- sapply(text, function(x) {
paste(strwrap(x, width = n), collapse = "\n")
})
return(unname(wtext))
}
label.dependent.var.value
View(summary.statistic)
summary.statistic[, "independent.var.value"]
questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"]
questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"]
questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
summary.statistic[, "independent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
independent.linebreak
summary.statistic[, "independent.var.value"] %<>%
linebreak
label.dependent.var
summary.statistic[, "dependent.var"] <- questionnaire$question_get_question_label(summary.statistic[,
"dependent.var"])
summary.statistic[, "dependent.var"]
questionnaire$question_get_question_label(summary.statistic[,
"dependent.var"])
map_to_labeled(., q)
length(unique(summary.statistic[, "dependent.var"])) >
1
length(unique(summary.statistic[, "independent.var"])) >
1
linebreak <- function(text, n = 40) {
wtext <- sapply(text, function(x) {
paste(strwrap(x, width = n), collapse = "\n")
})
return(unname(wtext))
}
label.dependent.var.value
questionnaire$question_get_choice_labels(summary.statistic[,
"dependent.var.value"], summary.statistic[, "dependent.var"][1])
summary.statistic[, "dependent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"dependent.var.value"], summary.statistic[, "dependent.var"][1])
dependent.linebreak
label.independent.var.value
questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
summary.statistic[, "independent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
independent.linebreak
summary.statistic[, "independent.var.value"] %<>%
linebreak
label.dependent.var
uestionnaire$question_get_question_label(summary.statistic[,
"dependent.var"])
questionnaire$question_get_question_label(summary.statistic[,
"dependent.var"])
questionnaire$question_get_question_label("food_source")
questionnaire$question_get_question_label("age_hoh")
questionnaire$question_get_question_label("sex_hoh")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
debugonce(map_to_labeled)
result %>% map_to_labeled(q) -> result_labeled
debugonce(labels_summary_statistic)
result$summary.statistic <- labels_summary_statistic(result$summary.statistic,
questionnaire = questionnaire, label.dependent.var.value = T,
label.independent.var.value = T)
length(unique(summary.statistic[, "dependent.var"])) >
1
length(unique(summary.statistic[, "independent.var"])) >
1
linebreak <- function(text, n = 40) {
wtext <- sapply(text, function(x) {
paste(strwrap(x, width = n), collapse = "\n")
})
return(unname(wtext))
}
label.dependent.var.value
questionnaire$question_get_choice_labels(summary.statistic[,
"dependent.var.value"], summary.statistic[, "dependent.var"][1])
questionnaire$question_get_choice_labels(summary.statistic[,
"dependent.var.value"], summary.statistic[, "dependent.var"][1])
summary.statistic[, "dependent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"dependent.var.value"], summary.statistic[, "dependent.var"][1])
dependent.linebreak
label.independent.var.value
questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
summary.statistic[, "independent.var.value"] <- questionnaire$question_get_choice_labels(summary.statistic[,
"independent.var.value"], summary.statistic[, "independent.var"][1])
independent.linebreak
summary.statistic[, "independent.var.value"] %<>%
linebreak
label.dependent.var
questionnaire$question_get_question_label(summary.statistic[,
"dependent.var"])
questions <- read.csv("./input/survey.csv", stringsAsFactors = F)
questions <- read.csv("./input/survey.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
q <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
case <- map_to_case(hypothesis.type = "direct_reporting",
dependent.var.type = "categorical")
result<-map_to_result(data = data,
dependent.var = "food_source",
case = case,
weighting = weights,
questionnaire = q)
result %>% map_to_labeled(q) -> result_labeled
map_to_file(result_labeled$summary.statistic,"./output/labeled_summary_statistics.csv")
map_to_file(result$summary.statistic,"./output/summary_statistics.csv")
rm(list = ls())
questions <- read.csv("./input/survey.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
kobostandards::check_input(data = data, questions = questions, choices = choices ,samplingframe = sampling_frame,
analysisplan = analysisplan) %>% write.csv("check_input.csv")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
weighted_results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire)
weighted_results_labeled <- lapply(weighted_results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = weighted_results_labeled, filename = "./output/bio_food_shelter.csv")
library(parallel)
map_to_master_table(results_object = weighted_results_labeled, filename = "./output/bio_food_shelter.csv")
library(hypegrammaR)
rm(list = ls())
library(hypegrammaR)
library(parallel)
questions <- read.csv("./input/survey.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
weights(data)
weights(data) %>% write.csv("weights.csv") %>% browseURL("weights.csv")
rm(list = ls())
source('C:/Users/REACH/Downloads/mcla_analyseR-master/functions/analysisplan_factory.R')
library(hypegrammaR)
library(parallel)
questions <- read.csv("./input/survey.csv", stringsAsFactors = F)
choices <- read.csv("./input/choices.csv", stringsAsFactors = F)
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
analysisplan <- make_analysisplan_all_vars(df = data,questionnaire = questionnaire)
write.csv(x = analysisplan,file = "analysisplanallvar.csv")
analysisplan <- make_analysisplan_all_vars(df = data,questionnaire = questionnaire,repeat.for.variable = "mantika_label",
independent.variable = "sex_hoh")
write.csv(x = analysisplan,file = "analysisplanallvar2.csv")
analysisplan <- make_analysisplan_all_vars(df = data,questionnaire = questionnaire)
analysisplan <-read.csv("./input/analysisplanallvar.csv")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
weighted_results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire)
weighted_results_labeled <- lapply(weighted_results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = weighted_results_labeled, filename = "./output/test_analysisplanallvar.csv")
