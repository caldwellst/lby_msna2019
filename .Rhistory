devtools::install_github("ellieallien/hypegrammaR",build_opts = c())
devtools::install_github("ellieallien/hypegrammaR",build_opts = c(), force = T)
browseVignettes("hypegrammaR")
devtools::install_github("mabafaba/kobostandards")
browseVignettes("kobostandards")
devtools::install_github("mabafaba/kobostandards", force = T)
browseVignettes("kobostandards")
library(hypegrammaR)
getwd()
data <- load_data(file = "./input/data.csv")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
questionnaire <- load_questionnaire(data = "./input/data.csv",
questions = "./input/survey.csv",
choices = "./input/choices.csv",
choices.label.column.to.use = "label::English (en)")
analysisplan <- load_analysisplan(file = "./input/analysisplan.csv")
library(kobostandards)
library(tibble)
View(questionnaire)
View(questionnaire)
kobostandards::check_input(data = data, questions = questionnaire, choices = "./input/choices.csv" ,samplingframe = sampling_frame,
analysisplan = analysisplan)
check_input <-kobostandards::check_input(data = data, questions = questionnaire, choices = "./input/choices.csv" ,samplingframe = sampling_frame,
analysisplan = analysisplan)
View(check_input)
kobostandards::check_input(data = data, questions = questionnaire, choices = "./input/choices.csv" ,samplingframe = sampling_frame,
analysisplan = analysisplan) %>% write.csv("check_input.csv")
questionnaire <- load_questionnaire(data = "./input/data.csv",
questions = "./input/survey.csv",
choices = "./input/choices.csv",
choices.label.column.to.use = "label::English (en)")
kobostandards::check_input(data = data, questions = questionnaire, choices = "./input/choices.csv" ,samplingframe = sampling_frame,
analysisplan = analysisplan) %>% write.csv("check_input.csv")
View(check_input)
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
View(data)
weighted_results <- from_analysisplan_map_to_output(data = data,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire)
weighted_results_labeled <- lapply(weighted_results$results, map_to_labeled,questionnaire)
map_to_master_table(results_object = weighted_results_labeled, filename = "bio_food_shelter.csv")
library(parallel)
map_to_master_table(results_object = weighted_results_labeled, filename = "bio_food_shelter.csv")
map_to_master_table(results_object = weighted_results_labeled, filename = "./output/bio_food_shelter.csv")
